[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sidiffagent"
version = "0.1.0"
description = "Self-Improving Diffusion Agent - A training-free agentic framework for text-to-image generation"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}

keywords = [
    "diffusion",
    "text-to-image",
    "agent",
    "langchain",
    "qwen",
    "generative-ai",
    "image-generation",
    "self-improving"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]

dependencies = [
    # Core dependencies
    "torch==2.7.1",
    "torchvision==0.22.1",
    "transformers==4.48.1",
    "diffusers==0.32.2",
    "accelerate==1.3.0",
    
    # LangChain ecosystem
    "langchain==0.3.17",
    "langchain-community==0.3.16",
    "langchain-core==0.3.33",
    "langchain-openai==0.3.3",
    "langchain-text-splitters==0.3.5",
    "langgraph==0.2.73",
    "langgraph-checkpoint==2.0.15",
    "langgraph-sdk==0.1.51",
    "langsmith==0.3.2",
    
    # AI/ML libraries
    "openai==1.60.2",
    "tiktoken==0.8.0",
    "tokenizers==0.21.0",
    "sentencepiece==0.2.0",
    "safetensors==0.5.2",
    "einops==0.8.1",
    "timm==1.0.16",
    
    # Computer vision
    "opencv-python==4.11.0.86",
    "pillow==11.1.0",
    "supervision==0.25.1",
    
    # Scientific computing
    "numpy==2.2.2",
    "scipy==1.15.2",
    
    # Visualization
    "matplotlib==3.10.1",
    
    # Configuration management
    "hydra-core==1.3.2",
    "omegaconf==2.3.0",
    "python-dotenv==1.0.1",
    "pydantic==2.10.6",
    "pydantic-core==2.27.2",
    "pydantic-settings==2.7.1",
    
    # Database and storage
    "sqlalchemy==2.0.37",
    
    # Utilities
    "tqdm==4.67.1",
    "rich==14.0.0",
    "requests==2.32.3",
    "requests-toolbelt==1.0.0",
    "httpx==0.28.1",
    "httpx-sse==0.4.0",
    "aiohttp==3.11.11",
    "beautifulsoup4==4.13.3",
    
    # Data processing
    "pandas",
    "jsonpatch==1.33",
    "jsonpointer==3.0.0",
    "pyyaml==6.0.2",
    "orjson==3.10.15",
    "protobuf==5.29.3",
    
    # Development utilities
    "fsspec==2024.12.0",
    "huggingface-hub==0.28.0",
    "iopath==0.1.10",
    "portalocker==3.2.0",
    "psutil==6.1.1",
    "regex==2024.11.6",
    "termcolor==3.1.0",
    "tenacity==9.0.0",
    
    # Misc
    "mmengine==0.10.7",
    "addict==2.4.0",
    "dataclasses-json==0.6.7",
    "typing-inspect==0.9.0",
    "zstandard==0.23.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "isort>=5.12",
    "flake8>=6.0",
    "mypy>=1.0",
    "yapf==0.43.0",
]

cuda = [
    "nvidia-cublas-cu12==12.6.4.1",
    "nvidia-cuda-cupti-cu12==12.6.80",
    "nvidia-cuda-nvrtc-cu12==12.6.77",
    "nvidia-cuda-runtime-cu12==12.6.77",
    "nvidia-cudnn-cu12==9.5.1.17",
    "nvidia-cufft-cu12==11.3.0.4",
    "nvidia-cufile-cu12==1.11.1.6",
    "nvidia-curand-cu12==10.3.7.77",
    "nvidia-cusolver-cu12==11.7.1.2",
    "nvidia-cusparse-cu12==12.5.4.2",
    "nvidia-cusparselt-cu12==0.6.3",
    "nvidia-nccl-cu12==2.26.2",
    "nvidia-nvjitlink-cu12==12.6.85",
    "nvidia-nvtx-cu12==12.6.77",
    "triton==3.3.1",
]

all = [
    "sidiffagent[dev,cuda]",
]

[project.urls]
Homepage = "https://github.com/ayushsi42/agents-image-gen"
Repository = "https://github.com/ayushsi42/agents-image-gen"
Issues = "https://github.com/ayushsi42/agents-image-gen/issues"

[project.scripts]
sidiffagent = "scripts.main:main"

[tool.setuptools]
packages = ["scripts", "scripts.prompts", "scripts.eval_benchmark"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.json", "*.txt", "*.csv"]

[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=scripts --cov-report=term-missing"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.yapf]
based_on_style = "pep8"
column_limit = 120
dedent_closing_brackets = true
coalesce_brackets = true
split_before_logical_operator = true
